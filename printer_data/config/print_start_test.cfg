#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)
## Beacon Contact logic (if you have one. 4 lines at 4 locations)

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("30")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  ##  Uncomment for Beacon Contact (1 of 4 for beacon contact)
  #SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    SET_FAN_SPEED FAN=Nevermore SPEED=1
  # SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp
  #  TEMPERATURE_WAIT SENSOR="temperature_sensor heater_bed_corner" MINIMUM={(BED|float * 0.70)|round}  #SSlicer

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for Beacon contact (2 of 4 for beacon contact)
  #G28 Z METHOD=CONTACT CALIBRATE=1                     # Calibrate z offset and beacon model

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  #STATUS_LEVELING                                      # Set LEDs to leveling-mode
  #Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
  #G28 Z                                                # Home Z again after Z_TILT_ADJUST

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  STATUS_LEVELING                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
 # BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh
  BED_MESH_CALIBRATE   ADAPTIVE=1 ADAPTIVE_MARGIN=0  #ADAPTIVE=1
 # BED_MESH_PROFILE LOAD=default

  ## Uncomment for Beacon Contact (3 of 4 for beacon contact)
  #G28 Z METHOD=CONTACT CALIBRATE=0                     # Calibrate z offset only with hot nozzle
  CARTOGRAPHER_TOUCH
  
  ##Extra 
  SET_PIN PIN=caselight VALUE=0.9
  SET_FAN_SPEED FAN=filter SPEED=1
#    ERCF_OFF
  SET_Z_THERMAL_ADJUST ENABLE=1
#    RESETCURRENT
#  RESETSPEEDS

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  ##   Uncomment for Beacon Contact (4 of 4 for beacon contact)
  #SET_GCODE_OFFSET Z=0.06                              # Add a little offset for hotend thermal expansion

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  PRIME_LINE
  SKEW_PROFILE LOAD=skew_profile_1
  SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=1
  M117 Printing
  
#  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
#  G0 Z0.4                                               # Raise Z to 0.4
#  G91                                                   # Incremental positioning 
#  G1 X100 E20 F1000                                     # Primeline
#  G90                                                   # Absolute position



[gcode_macro PRINT_END]
gcode:
#    # safe anti-stringing move coords
#    {% set unload = params.UNLOAD_AT_END|default(0)|int %}     ##ERCF
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
#    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0  #ERCF
    PRINTER_STATE_SUCCESS
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F1800                 ; retract filament

#    {% if unload|int == 1%}       ##ERCF
#      ERCF_EJECT                  ##ERCF
#    {% endif %}                   ##ERCF
    
    
    TURN_OFF_HEATERS
    M106 S255                          #turn oN fan
    exaustor_on
   
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M84
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=50 MAXIMUM=55
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    SET_SKEW CLEAR=1
    SET_PIN PIN=caselight VALUE=0.0
    SET_FAN_SPEED FAN=filter SPEED=0
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    SET_FAN_SPEED FAN=Nevermore SPEED=0
    RESETSPEEDS
    CLEAR_PAUSE
    SET_Z_THERMAL_ADJUST ENABLE=0
    EXAUSTOR_OFF
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    POWER_OFF_PRINTER
    #M81

[gcode_macro _PURGE_LINE]
gcode:
    {% set START_X = params.START_X|default(10)|float %}
    {% set START_Y = params.START_Y|default(5)|float|default(5)|float %}
    {% set LENGTH = params.LENGTH|default(120)|float %}
    {% set DIRECTION = params.DIRECTION|default("X") %}
    {% set PURGE = params.PURGE|default(40)|float %}

    G92 E0;
    G90
    G0 X{START_X} Y{START_Y} F18000
    G0 Z0.4
    G91
    G1 {DIRECTION}{LENGTH} E{PURGE/2} F2200;
    G1 X1 Y1
    G1 {DIRECTION}-{LENGTH-1} E{PURGE/2} F1400;
    G1 Z3 E-0.75 F1800
    G1 E0.75 F1800
    G90
    G92 E0;

[gcode_macro PRIME_LINE]
gcode: |
    {% set X = params.X|default(20)|float %} ; X-axis start position
    {% set Y = params.Y|default(25)|float %} ; Y-axis start position
    {% set AXIS = params.AXIS|default("X")|string|lower %} ; axis direction for prime line
    {% set PARK_SPEED = params.PARK_SPEED|default(300)|int %}
    {% set LAYER_HEIGHT = params.LAYER_HEIGHT|default(0.2)|float %} ; prime line layer height
    {% set LENGTH = params.LENGTH|default(100)|float %} ; line length in mm
    {% set WIDTH = params.WIDTH|default(1.6)|float %} ; line width in mm
    {% set FILAMENT_WIDTH = params.FILAMENT_WIDTH|default(1.75)|float %} ; filament diameter in mm
    {% set SPEED = params.SPEED|default(16)|int %} ; line speed in mm/s
    {% set RETRACTION_LENGTH = params.RETRACTION_LENGTH|default(0.5)|float %} ; mm retraction after line printed
    {% set RETRACTION_SPEED = params.RETRACTION_SPEED|default(30)|int %} ; mm/s retraction speed after line printed
    {% set Z_LIFT = params.Z_LIFT|default(10)|float %} ; z lift after primed line
    {% set WIPE_LENGTH = params.WIPE_LENGTH|default(2)|float %} ; wipe after intro line
    {% set RESTORE = params.RESTORE|default(1)|int %} ; restore initial position after prime line 

    SAVE_GCODE_STATE NAME=prime_line_state

    M117 Intro line..
    G1 X{X} Y{Y} Z{LAYER_HEIGHT} F{(PARK_SPEED * 60)}; park
    G91
    G92 E0.0
    {% set FIRST_LENGTH = (LENGTH * 0.65)|round(2)|float %}
    {% set SECOND_LENGTH = (LENGTH - FIRST_LENGTH|float)|round(2)|float %}

    {% set filament_rate = WIDTH * LAYER_HEIGHT %}

    G1 {AXIS|upper}{FIRST_LENGTH} E{ ((filament_rate * FIRST_LENGTH)/FILAMENT_WIDTH) } F{(60*SPEED)} ; intro line
    G1 {AXIS|upper}{SECOND_LENGTH} E{ 1.25 * ((filament_rate * SECOND_LENGTH)/FILAMENT_WIDTH)|round(3) } F{(60*SPEED)} ; intro line

    {% if WIPE_LENGTH|int != 0 %}
        G1 {AXIS|upper}{WIPE_LENGTH} F{(60*SPEED)}
    {% endif %}

    {% if RETRACTION_LENGTH != 0 %}
        G92 E0.0
        G1 E{ (-1 * RETRACTION_LENGTH)} F{60 * RETRACTION_SPEED}
    {% endif %}

    {% if Z_LIFT > 0 %}
        G1 Z{Z_LIFT} F{(30*60)}
    {% endif %}

    #CLEAR_SCREEN
	M400

    RESTORE_GCODE_STATE NAME=prime_line_state MOVE={RESTORE} MOVE_SPEED={PARK_SPEED}
