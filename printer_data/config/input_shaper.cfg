#####################################################################
#  G Sensor definition
#####################################################################
##EBBCan##
#[adxl345]        
#cs_pin: host:None

#[adxl345 EBBCan]
[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

##  The SPI speed (in hz) to use when communicating with the chip.
##  The default is 5000000.
#spi_speed: 5000000
## Output data rate for ADXL345. ADXL345 supports the following data
##  rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
## not recommended to change this rate from the default 3200, and
##  rates below 800 will considerably affect the quality of resonance
##  measurements.
#rate: 3200
##  The accelerometer axis for each of the printer's x, y, and z axes.
##  This may be useful if the accelerometer is mounted in an
##  orientation that does not match the printer orientation. For
##  example, one could set this to "y,x,z" to swap the x and y axes.
##  It is also possible to negate an axis if the accelerometer
##  direction is reversed (eg, "x,z,-y"). The default is "x,y,z".
##  receck
#axes_map: x,y,z

#####################################################################
#  resonance tester definition
#####################################################################
#[resonance_tester]
#accel_chip: adxl345
##  A list of X,Y,Z coordinates of points (one point per line) to test
##  resonances at. At least one point is required. Make sure that all
##  points with some safety margin in XY plane (~a few centimeters)
##  are reachable by the toolhead.
#probe_points:  
#    175,175,20
#    175,175,160
#    175,175,300
##  Maximum input shaper smoothing to allow for each axis during shaper
##  auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
##  maximum smoothing is specified. Refer to Measuring_Resonances guide
##  for more details on using this feature.
#max_smoothing:
##  Minimum/Maximum frequency to test for resonances.
#min_freq: 5
#max_freq: 133
##  This parameter is used to determine which acceleration to use to
##  test a specific frequency: accel = accel_per_hz * freq. Higher the
##  value, the higher is the energy of the oscillations. Can be set to
##  a lower than the default value if the resonances get too strong on
##  the printer. However, lower values make measurements of
##  high-frequency resonances less precise. The default value is 75
##  (mm/sec).
#accel_per_hz: 75
##  Determines the speed of the test. When testing all frequencies in
##  range [min_freq, max_freq], each second the frequency increases by
##  hz_per_sec. Small values make the test slow, and the large values
##  will decrease the precision of the test. The default value is 1.0
##  (Hz/sec == sec^-2).
#hz_per_sec: 1

#####################################################################
#  input shaper  definition
#####################################################################
[input_shaper]
##  A frequency (in Hz) of the input shaper for X or Y axis. 
shaper_freq_x: 37.4  #39.0 ebbcan
shaper_freq_y: 28.2  #28.8 ebbcan
##  A type of the intput shaper for X or Y axia.
shaper_type_x: mzv
shaper_type_y: mzv
##  Damping ratios of vibrations of X and Y axes used by input shapers
##  to improve vibration suppression. Default value is 0.1 which is a
##  good all-round value for most printers. In most circumstances this
##  parameter requires no tuning and should not be changed.
damping_ratio_x: 0.054  #0.053 ebbcan
damping_ratio_y: 0.073  #0.061 ebbcan

#[gcode_macro TEST_RESONANCES]
#rename_existing: BASE_TEST_RESONANCES
#description: Runs input shaper test at the center of the bed
#gcode:
#    {% set Tx, Ty = printer["gcode_macro _USER_VARIABLES"].resonnance_test_point_xy|map('float') %}
#    {% set Tz = printer["gcode_macro _USER_VARIABLES"].resonnance_test_z_clearance|float %}
#
#    {% if Tx == -1 and Ty == -1 %}
#        {% set max_x = printer.toolhead.axis_maximum.x|float %}
#        {% set max_y = printer.toolhead.axis_maximum.y|float %}

#        BASE_TEST_RESONANCES POINT={max_x / 2},{max_y / 2},{Tz} {rawparams} 
#    {% else %}
#        BASE_TEST_RESONANCES POINT={Tx},{Ty},{Tz} {rawparams}
#    {% endif %}

[shaketune]
 result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
 number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
 keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
 show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
 timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.


#[gcode_macro _set_zone_core_xy]
#gcode:
#    {% set X_pos = printer.gcode_move.gcode_position.x %}
#    {% set Y_pos = printer.gcode_move.gcode_position.y %}
#    {% set Z_pos = printer.gcode_move.gcode_position.z %}
#    {% if X_pos >=0 and X_pos < 325 / 2 and Y_pos >=0 and Y_pos < 325 / 2 %}
#        SET_INPUT_SHAPER SHAPER_TYPE_X=3HUMP_EI SHAPER_TYPE_Y=MZV SHAPER_FREQ_X=48.6 SHAPER_FREQ_Y=46.2
#    {% elif X_pos >= 325 / 2 and Y_pos >=0 and Y_pos < 325 / 2 %}
#        SET_INPUT_SHAPER SHAPER_TYPE_X=EI SHAPER_TYPE_Y=mzv SHAPER_FREQ_X=44.6 SHAPER_FREQ_Y=44.4
#    {% elif X_pos >=0 and X_pos < 325 / 2 and Y_pos >= 325 / 2 %}
#        SET_INPUT_SHAPER SHAPER_TYPE_X=3HUMP_EI SHAPER_TYPE_Y=MZV SHAPER_FREQ_X=49.6 SHAPER_FREQ_Y=46.6
#    {% elif X_pos >= 325 / 2 and Y_pos >= 325 / 2 %}
#        SET_INPUT_SHAPER SHAPER_TYPE_X=EI SHAPER_TYPE_Y=MZV SHAPER_FREQ_X=44.4 SHAPER_FREQ_Y=45.2
#    {% endif %}
